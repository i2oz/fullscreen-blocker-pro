name: Fullscreen Blocker Pro CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint JavaScript
      run: npm run lint
    
    - name: Validate manifest.json
      run: npm run validate-manifest
    
    - name: Check i18n files
      run: npm run check-i18n
    
    - name: Validate CSS
      run: npm run lint-css

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        # Check for potential security issues in manifest
        if grep -q "unsafe-eval\|unsafe-inline" manifest.json; then
          echo "Security issue: Found unsafe CSP directives"
          exit 1
        fi
        
        # Check for external resources
        if grep -q "http://" *.js *.html *.json; then
          echo "Security issue: Found HTTP resources (should use HTTPS)"
          exit 1
        fi
        
        echo "Security scan passed"

  validate-extension:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Chrome
      uses: browser-actions/setup-chrome@v1
    
    - name: Validate extension structure
      run: |
        # Check required files exist
        required_files=("manifest.json" "background.js" "content.js" "injected.js" "popup.html" "popup.css" "popup.js" "i18n.js")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Error: Required file $file is missing"
            exit 1
          fi
        done
        
        # Check i18n structure
        if [ ! -d "_locales" ]; then
          echo "Error: _locales directory is missing"
          exit 1
        fi
        
        if [ ! -f "_locales/en/messages.json" ]; then
          echo "Error: Default English locale is missing"
          exit 1
        fi
        
        echo "Extension structure validation passed"
    
    - name: Validate JSON files
      run: |
        # Validate manifest.json
        if ! jq empty manifest.json; then
          echo "Error: manifest.json is invalid"
          exit 1
        fi
        
        # Validate all messages.json files
        for file in _locales/*/messages.json; do
          if ! jq empty "$file"; then
            echo "Error: $file is invalid JSON"
            exit 1
          fi
        done
        
        echo "JSON validation passed"

  build-extension:
    runs-on: ubuntu-latest
    needs: [lint-and-validate, security-scan, validate-extension]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Create extension package
      run: |
        # Create build directory
        mkdir -p build
        
        # Copy extension files
        cp manifest.json build/
        cp *.js build/
        cp *.html build/
        cp *.css build/
        cp -r _locales build/
        
        # Create icons directory if it exists
        if [ -d "icons" ]; then
          cp -r icons build/
        fi
        
        # Create zip for Chrome Web Store
        cd build
        zip -r ../fullscreen-blocker-pro.zip .
        cd ..
        
        echo "Extension package created: fullscreen-blocker-pro.zip"
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: extension-build
        path: fullscreen-blocker-pro.zip

  test-locales:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Test i18n completeness
      run: |
        # Get all keys from English locale
        en_keys=$(jq -r 'keys[]' _locales/en/messages.json | sort)
        
        # Check each locale has all keys
        for locale_dir in _locales/*/; do
          locale=$(basename "$locale_dir")
          if [ "$locale" != "en" ]; then
            echo "Checking locale: $locale"
            locale_keys=$(jq -r 'keys[]' "_locales/$locale/messages.json" | sort)
            
            # Compare keys
            if [ "$en_keys" != "$locale_keys" ]; then
              echo "Error: Locale $locale is missing keys or has extra keys"
              echo "English keys:"
              echo "$en_keys"
              echo "Locale keys:"
              echo "$locale_keys"
              exit 1
            fi
          fi
        done
        
        echo "All locales are complete"